<Grid x:Class="HDT.Plugins.Graveyard.SettingsView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
              xmlns:hdtc="clr-namespace:Hearthstone_Deck_Tracker.Controls;assembly=HearthstoneDeckTracker"
              xmlns:local="clr-namespace:HDT.Plugins.Graveyard"
              xmlns:lex="http://wpflocalizeextension.codeplex.com"
              lex:LocalizeDictionary.DesignCulture="en"
              lex:ResxLocalizationProvider.DefaultAssembly="Graveyard"
              lex:ResxLocalizationProvider.DefaultDictionary="Strings"
              mc:Ignorable="d"
              d:DesignHeight="900" d:DesignWidth="420">
	<Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="TitleStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="bold"/>
                <Setter Property="Margin" Value="10,20,10,5"/>
            </Style>
            <Style x:Key="DescStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="Margin" Value="10,0"/>
            </Style>
            <Style x:Key="ToggleStyle" TargetType="mah:ToggleSwitch">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="OnLabel" Value="Enabled"/>
                <Setter Property="OffLabel" Value="Disabled"/>
                <Setter Property="Margin" Value="10,0"/>
            </Style>
            <Style x:Key="TitleToggleStyle" TargetType="mah:ToggleSwitch" BasedOn="{StaticResource ToggleStyle}">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
            <Style x:Key="SubToggleStyle" TargetType="mah:ToggleSwitch" BasedOn="{StaticResource ToggleStyle}">
                <Setter Property="FontSize" Value="12"/>
            </Style>
            <Style x:Key="SliderPanelStyle" TargetType="DockPanel">
                <Setter Property="Margin" Value="10,0"/>
            </Style>
            <Style x:Key="SliderStyle" TargetType="Slider">
                <Setter Property="IsSnapToTickEnabled" Value="True"/>
                <Setter Property="TickFrequency" Value="1"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Width" Value="150"/>
            </Style>
            <Style x:Key="OpacitySliderStyle" TargetType="Slider" BasedOn="{StaticResource SliderStyle}">
                <Setter Property="LargeChange" Value="10"/>
                <Setter Property="Minimum" Value="20"/>
                <Setter Property="Maximum" Value="100"/>
            </Style>
            <Style x:Key="ScaleSliderStyle" TargetType="Slider" BasedOn="{StaticResource SliderStyle}">
                <Setter Property="LargeChange" Value="10"/>
                <Setter Property="Minimum" Value="50"/>
                <Setter Property="Maximum" Value="200"/>
            </Style>
            <Style x:Key="SliderTextStyle" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextAlignment" Value="Right"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Margin" Value="0,0,10,0"/>
            </Style>
            <Style x:Key="CheckboxStyle" TargetType="CheckBox">
                <Setter Property="Margin" Value="12,0,0,4"/>
            </Style>
            <Style x:Key="ExpanderStyle" TargetType="Expander" BasedOn="{StaticResource MetroExpander}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="MinWidth" Value="410"/>
                <Setter Property="IsExpanded" Value="True"/>
            </Style>
            <Style x:Key="ListViewStyle" TargetType="ListView" BasedOn="{StaticResource MetroListView}">
                <Setter Property="Margin" Value="5"/>
            </Style>
        </ResourceDictionary>
    </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition Height="auto"/>
        <RowDefinition Height="auto"/>
        <RowDefinition Height="auto"/>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Button Name="BtnUnlock" Width="150" Content="{lex:Loc Unlock}" Click="BtnUnlock_Click" Grid.Row="0" />
    <Expander Header="{lex:Loc Friendly}"
              Style="{StaticResource ExpanderStyle}"
              Grid.Row="1">
        <StackPanel>
            <mah:ToggleSwitch IsChecked="{Binding NormalEnabled, Source={x:Static local:Settings.Default}}" 
                        Content="{lex:Loc Graveyard}"
                        ToolTip="{lex:Loc FriendlyDescription}" 
                        Style="{StaticResource ToggleStyle}"/>
            <mah:ToggleSwitch IsChecked="{Binding FriendlyQuestlineEnabled, Source={x:Static local:Settings.Default}}" 
                        Content="{lex:Loc Questline}"
                        ToolTip="{lex:Loc QuestlineDescription}" 
                        Style="{StaticResource ToggleStyle}"/>
            <mah:ToggleSwitch IsChecked="{Binding ResurrectEnabled, Source={x:Static local:Settings.Default}}" 
                        Content="{lex:Loc Resurrect}"
                        ToolTip="{lex:Loc ResurrectDescription}" 
                        Style="{StaticResource ToggleStyle}"/>
            <mah:ToggleSwitch IsChecked="{Binding DeathrattleEnabled, Source={x:Static local:Settings.Default}}" 
                        Content="{lex:Loc Deathrattle}"
                        ToolTip="{lex:Loc DeathrattleDescription}" 
                        Style="{StaticResource ToggleStyle}"/>
            <GroupBox Header="{lex:Loc SettingsDisplayTitle}">
                <StackPanel>
                    <DockPanel Style="{StaticResource SliderPanelStyle}">
                        <Slider x:Name="SliderFriendlyOpacity" DockPanel.Dock="Right"
                Style="{StaticResource OpacitySliderStyle}"
                Value="{Binding FriendlyOpacity, Source={x:Static local:Settings.Default}}"/>
                        <Label Content="{lex:Loc Opacity}" VerticalAlignment="Center" DockPanel.Dock="Left" />
                        <TextBlock Text="{Binding FriendlyOpacity, Source={x:Static local:Settings.Default}, StringFormat={}{0}%}"
                    Style="{StaticResource SliderTextStyle}"
                    DockPanel.Dock="Right"  />
                    </DockPanel>
                    <DockPanel Style="{StaticResource SliderPanelStyle}">
                        <Slider x:Name="SliderFriendlyScale" DockPanel.Dock="Right"
                Style="{StaticResource ScaleSliderStyle}"
                Value="{Binding FriendlyScale, Source={x:Static local:Settings.Default}}"/>
                        <Label Content="{lex:Loc Scale}" VerticalAlignment="Center" DockPanel.Dock="Left" />
                        <TextBlock Text="{Binding FriendlyScale, Source={x:Static local:Settings.Default}, StringFormat={}{0}%}" 
                    Style="{StaticResource SliderTextStyle}"
                    DockPanel.Dock="Right" />
                    </DockPanel>
                    <DockPanel Style="{StaticResource SliderPanelStyle}" ToolTip="{lex:Loc OrientationDescription}">
                        <DockPanel.Resources>
                            <local:EnumToBoolConverter x:Key="EnumToBoolConverter" />
                        </DockPanel.Resources>
                        <RadioButton IsChecked="{Binding Path=FriendlyOrientation, 
            Source={x:Static local:Settings.Default}, 
            Converter={StaticResource EnumToBoolConverter}, 
            ConverterParameter={x:Static Orientation.Horizontal}}" 
                        Content="{lex:Loc Horizontal}" VerticalAlignment="Center" DockPanel.Dock="Right" Width="120"/>
                        <RadioButton IsChecked="{Binding Path=FriendlyOrientation, 
            Source={x:Static local:Settings.Default}, 
            Converter={StaticResource EnumToBoolConverter}, 
            ConverterParameter={x:Static Orientation.Vertical}}" 
                        Content="{lex:Loc Vertical}" VerticalAlignment="Center" DockPanel.Dock="Right" Width="120"/>
                        <Label Content="{lex:Loc Orientation}" VerticalAlignment="Center" DockPanel.Dock="Left" />
                    </DockPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </Expander>
    <Expander Header="{lex:Loc Opponent}"
              Style="{StaticResource ExpanderStyle}"
              Grid.Row="2">
        <StackPanel>
            <mah:ToggleSwitch IsChecked="{Binding EnemyEnabled, Source={x:Static local:Settings.Default}}" 
                        Content="{lex:Loc Graveyard}"
                        ToolTip="{lex:Loc OpponentDescription}" 
                        Style="{StaticResource ToggleStyle}"/>
            <mah:ToggleSwitch IsChecked="{Binding EnemyQuestlineEnabled, Source={x:Static local:Settings.Default}}" 
                        Content="{lex:Loc Questline}"
                        ToolTip="{lex:Loc QuestlineDescription}" 
                        Style="{StaticResource ToggleStyle}"/>
            <GroupBox Header="{lex:Loc SettingsDisplayTitle}">
                <StackPanel>
                    <DockPanel Style="{StaticResource SliderPanelStyle}">
                        <Slider x:Name="SliderEnemyOpacity" DockPanel.Dock="Right"
                Style="{StaticResource OpacitySliderStyle}"
                Value="{Binding EnemyOpacity, Source={x:Static local:Settings.Default}}"/>
                        <Label Content="{lex:Loc Opacity}" VerticalAlignment="Center" DockPanel.Dock="Left" />
                        <TextBlock Text="{Binding EnemyOpacity, Source={x:Static local:Settings.Default}, StringFormat={}{0}%}"
                    Style="{StaticResource SliderTextStyle}"
                    DockPanel.Dock="Right" />
                    </DockPanel>
                    <DockPanel Style="{StaticResource SliderPanelStyle}">
                        <Slider x:Name="SliderEnemyScale" VerticalAlignment="Center" DockPanel.Dock="Right" Width="150"
                Style="{StaticResource ScaleSliderStyle}"
                Value="{Binding EnemyScale, Source={x:Static local:Settings.Default}}"/>
                        <Label Content="{lex:Loc Scale}" VerticalAlignment="Center" DockPanel.Dock="Left" />
                        <TextBlock Text="{Binding EnemyScale, Source={x:Static local:Settings.Default}, StringFormat={}{0}%}"
                Style="{StaticResource SliderTextStyle}"
                DockPanel.Dock="Right" />
                    </DockPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </Expander>
    <GroupBox Header="{lex:Loc SettingsCardsTitle}"
              Margin="5"
              Grid.Row="3">
        <ListView x:Name="CardView"
                  Style="{StaticResource ListViewStyle}"
                      Margin="0"
                  Grid.Row="1"
                  >
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander Header="{Binding Name}" IsExpanded="True"
                                            HorizontalAlignment="Stretch" 
                                            HorizontalContentAlignment="Stretch">
                                            <ItemsPresenter/>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <mah:ToggleSwitch IsChecked="{Binding IsEnabled}">
                        <hdtc:Card DataContext="{Binding Card}"/>
                    </mah:ToggleSwitch>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </GroupBox>
</Grid>
